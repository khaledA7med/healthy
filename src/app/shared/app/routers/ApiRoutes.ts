import { BaseData } from "src/app/core/models/masterTableModels";
const LookUpTables = "/LookupTables/";

export const ApiRoutes = {
  Users: {
    login: "/Account/login",
    refesh: "/Account/RefreshToken",
  },
  Emails: {
    allActiveClients: LookUpTables + "ActiveClient",
    createClientContact: "/ClientRegistry/Clients/CreateClientContact",
    createCompanyContact:
      "/MasterTables/InsuranceCompanies/CreateCompanyContact",
    sendEmail: "/Emails/Send",
  },
  MasterTable: {
    Activities: {
      producers: LookUpTables + BaseData.Producers,
      tasksTypes: LookUpTables + BaseData.TasksTypes,
      IBSModules: LookUpTables + BaseData.IBSModules,
    },
    Emails: {
      branch: LookUpTables + BaseData.Branch,
      contactDepartment: LookUpTables + BaseData.ContactDepartment,
      contactLineOfBusiness: LookUpTables + BaseData.ContactLineOfBusiness,
      positions: LookUpTables + BaseData.Positions,
      insuranceCompaniesContact: LookUpTables + "InsuranceCompaniesContact",
      emailsPriorityList: LookUpTables + "EmailsPriorityList",
    },
    MasterTables: {
      insurClasses: LookUpTables + BaseData.InsurClasses,
      lineOfBusiness: LookUpTables + BaseData.LineOfBusiness,
      insuranceComapnies: LookUpTables + BaseData.InsuranceCompanies,
      contactLineOfBusiness: LookUpTables + BaseData.ContactLineOfBusiness,
      contactDepartment: LookUpTables + BaseData.ContactDepartment,
      TypeOfCustomerServices: LookUpTables + BaseData.TypeOfCustomerServices,
      policyEndorsTypes: LookUpTables + BaseData.PolicyEndorsTypes,
      regions: LookUpTables + BaseData.Regions,
      cities: LookUpTables + BaseData.Cities,
      claimStatus: LookUpTables + BaseData.ClaimStatus,
      TypeClaimsRejectionReason:
        LookUpTables + BaseData.TypeClaimsRejectionReason,
      vehicleCarsMake: LookUpTables + BaseData.VehicleCarsMake,
      getPolicyTypeIssue: LookUpTables + BaseData.GetPolicyTypeIssue,
      CategoryOfDefaultEmail: LookUpTables + BaseData.CategoryOfDefaultEmail,
    },
    Client: {
      AllClients: LookUpTables + BaseData.AllClients,
      clientType: LookUpTables + BaseData.ClientType,
      producers: LookUpTables + BaseData.Producers,
      relationshipStatus: LookUpTables + BaseData.RelationshipStatus,
      businessType: LookUpTables + BaseData.BusinessType,
      channels: LookUpTables + BaseData.Channels,
      interface: LookUpTables + BaseData.Interface,
      screeningResult: LookUpTables + BaseData.ScreeningResult,
      nationalities: LookUpTables + BaseData.Nationalities,
      sourceofIncome: LookUpTables + BaseData.SourceofIncome,
      registrationStatus: LookUpTables + BaseData.RegistrationStatus,
      businessActivities: LookUpTables + BaseData.BusinessActivities,
      marketSegment: LookUpTables + BaseData.MarketSegment,
      premium: LookUpTables + BaseData.Premium,
      positions: LookUpTables + BaseData.Positions,
      branch: LookUpTables + BaseData.Branch,
      contactDepartment: LookUpTables + BaseData.ContactDepartment,
      contactLineOfBusiness: LookUpTables + BaseData.ContactLineOfBusiness,
      banks: LookUpTables + BaseData.Banks,
      lineOfBusiness: LookUpTables + BaseData.LineOfBusiness,
      commericalNo: LookUpTables + BaseData.CommericalNo,
      groupsList: LookUpTables + BaseData.GroupsList,
      status: LookUpTables + BaseData.ClientStatus,
      cities: LookUpTables + BaseData.Cities,
    },
    BusinessDevelopment: {
      groupsList: LookUpTables + BaseData.GroupsList,
      branch: LookUpTables + BaseData.Branch,
      producers: LookUpTables + BaseData.Producers,
      InsurClasses: LookUpTables + BaseData.InsurClasses,
      AllUsers: LookUpTables + BaseData.AllUsers,
      SalesleadStatus: LookUpTables + BaseData.SalesleadStatus,
      allClients: LookUpTables + BaseData.AllClients,
      insurClasses: LookUpTables + BaseData.InsurClasses,
      InsuranceCompanyName: LookUpTables + BaseData.InsuranceCompanyName,
      InsuranceBrokersList: LookUpTables + BaseData.InsuranceBrokersList,
      logType: LookUpTables + BaseData.LogType,
      prospectsReportsTypes: LookUpTables + BaseData.ProspectsReportsTypes,
    },
    CustomerService: {
      AllClients: LookUpTables + BaseData.AllClients,
      Branch: LookUpTables + BaseData.Branch,
      InsuranceCompanies: LookUpTables + BaseData.InsuranceCompanies,
      CServiceStatus: LookUpTables + BaseData.CServiceStatus,
      PendingReason: LookUpTables + BaseData.PendingReason,
      AllUsers: LookUpTables + BaseData.AllUsers,
      InsurClasses: LookUpTables + BaseData.InsurClasses,
      TypeOfCustomerServices: LookUpTables + BaseData.TypeOfCustomerServices,
    },
    CustomerServiceForm: {
      policyEndorsTypes: LookUpTables + BaseData.PolicyEndorsTypes,
      allClients: LookUpTables + BaseData.AllClients,
      insuranceCompanies: LookUpTables + BaseData.InsuranceCompanies,
      vatPercentage: LookUpTables + BaseData.VATPercentage,
      branch: LookUpTables + BaseData.Branch,
      PendingReason: LookUpTables + BaseData.PendingReason,
    },
    Production: {
      policyStatus: LookUpTables + BaseData.PolicyStatus,
      branch: LookUpTables + BaseData.Branch,
      policyEndorsTypes: LookUpTables + BaseData.PolicyEndorsTypes,
      clientsList: LookUpTables + BaseData.ClientsList,
      producers: LookUpTables + BaseData.Producers,
      insuranceCompanies: LookUpTables + BaseData.InsuranceCompanies,
      insurClasses: LookUpTables + BaseData.InsurClasses,
      allUsers: LookUpTables + BaseData.AllUsers,
      insuranceClasses: LookUpTables + BaseData.InsurClasses,
      endorsTypes: LookUpTables + BaseData.PolicyEndorsTypes,
      productionFieldList: LookUpTables + BaseData.ProductionFieldList,
      productionOperatordList: LookUpTables + BaseData.ProductionOperatordList,
    },
    Claims: {
      claimStatus: LookUpTables + BaseData.ClaimStatus,
      allUsers: LookUpTables + BaseData.AllUsers,
      typeOfCustomerServices: LookUpTables + BaseData.TypeOfCustomerServices,
      insuranceCompanies: LookUpTables + BaseData.InsuranceCompanies,
      productionOperatordList: LookUpTables + BaseData.ProductionOperatordList,
      insurClasses: LookUpTables + BaseData.InsurClasses,
      currencies: LookUpTables + BaseData.Currencies,
      banks: LookUpTables + BaseData.Banks,
      rejectionReasons: LookUpTables + BaseData.RejectionReasons,
      claimCaseTypes: LookUpTables + BaseData.ClaimCaseTypes,
      motorClaimTypes: LookUpTables + BaseData.MotorClaimTypes,
      typesOfRepair: LookUpTables + BaseData.TypesOfRepair,
      hospitals: LookUpTables + BaseData.Hospitals,
      carsModels: LookUpTables + BaseData.CarsModels,
      cities: LookUpTables + BaseData.Cities,
      branch: LookUpTables + BaseData.Branch,
    },
    SystemAdmin: {
      statusOfUsers: LookUpTables + BaseData.StatusOfUsers,
      jobTitleOfUsers: LookUpTables + BaseData.JobTitleOfUsers,
      branch: LookUpTables + BaseData.Branch,
      staffProfilesNames: LookUpTables + BaseData.ProducersList,
      userSecurityRoles: LookUpTables + BaseData.UserSecurityRoles,
    },
    Reports: {
      clientsList: LookUpTables + BaseData.ClientsList,
      groupsList: LookUpTables + BaseData.GroupsList,
      InsurClasses: LookUpTables + BaseData.InsurClasses,
      lineOfBusinessByClassNames: LookUpTables + "LineOfBusinessByClassNames",
      insuranceCompanies: LookUpTables + BaseData.InsuranceCompanies,
      branch: LookUpTables + BaseData.Branch,
      producers: LookUpTables + BaseData.Producers,
      policyEndorsTypes: LookUpTables + BaseData.PolicyEndorsTypes,
      productionReportType: LookUpTables + BaseData.ProductionReportType,
      productionReportBasedOn: LookUpTables + BaseData.ProductionReportBasedOn,
      productionReportCaptive: LookUpTables + BaseData.ProductionReportCaptive,
      productionReportStatus: LookUpTables + BaseData.ProductionReportStatus,
      renewalNoticeReportStatus:
        LookUpTables + BaseData.RenewalNoticeReportStatus,
      cserviceStatus: LookUpTables + BaseData.CServiceStatus,
      csReportType: LookUpTables + BaseData.CSReportType,
      allUsers: LookUpTables + BaseData.AllUsers,
      csReportStatus: LookUpTables + BaseData.CSReportStatus,
      claimsReportType: LookUpTables + BaseData.ClaimsReportType,
    },
  },
  MasterMethods: {
    downloadDocument: "/Documents/Download",
    deleteDocument: "/Documents/Delete",
    lineOfBusiness: LookUpTables + "LineOfBusiness",
  },

  UsersAccounts: {
    search: "/account/search",
    save: "/account/create",
    resetPassword: "/account/resetpassword",
    changeStatus: "/account/changestatus",
  },
  LookUpTables: {
    allActiveClients: "/LookupTables/AllClientbyStatus",
  },
  SystemAdmin: {
    search: "/SystemAdmin/Users/Search",
    allRoles: "/SystemAdmin/Users/GetRoles",
    changeStatus: "/SystemAdmin/Users/ChangeStatus",
    userDetails: "/SystemAdmin/Users/ProducerBySno",
    addRole: "/SystemAdmin/Users/AddRole",
    deleteRole: "/SystemAdmin/Users/DeleteRole",
    getPrivileges: "/SystemAdmin/Users/GetPrivileges",
    editPrivileges: "/SystemAdmin/Users/EditPrivileges",
    changePasswordAsync: "/SystemAdmin/Users/ChangePasswordAsync",
    save: "/SystemAdmin/Users/Save",
    edit: "/SystemAdmin/Users/Edit",
    privigles: "/SystemAdmin/Users/ActivePrivileges",
  },
};
